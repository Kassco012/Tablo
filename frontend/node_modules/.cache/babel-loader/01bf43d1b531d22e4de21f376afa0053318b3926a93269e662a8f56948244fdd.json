{"ast":null,"code":"export const EQUIPMENT_TYPES = {\n  drill: {\n    value: 'drill',\n    label: 'Буровая установка'\n  },\n  dozer: {\n    value: 'dozer',\n    label: 'Бульдозер'\n  },\n  shovel: {\n    value: 'shovel',\n    label: 'Экскаватор'\n  },\n  grader: {\n    value: 'grader',\n    label: 'Автогрейдер'\n  },\n  truck: {\n    value: 'truck',\n    label: 'Самосвал'\n  },\n  loader: {\n    value: 'loader',\n    label: 'Погрузчик'\n  },\n  watertruck: {\n    value: 'watertruck',\n    label: 'Водовоз'\n  },\n  auxequipment: {\n    value: 'auxequipment',\n    label: 'Вспомогательное оборудование'\n  }\n};\nconst TYPE_MAP = {\n  'Drill': 'drill',\n  'Dozer': 'dozer',\n  'Shovel': 'shovel',\n  'Grader': 'grader',\n  'Truck': 'truck',\n  'Loader': 'loader',\n  'WaterTruck': 'watertruck',\n  'AuxEquipment': 'auxequipment'\n};\nexport const getEquipmentTypeText = type => {\n  if (!type) return 'Неизвестный тип';\n  const mappedType = TYPE_MAP[type] || type;\n  const normalizedType = mappedType.toLowerCase().trim();\n  const equipmentType = EQUIPMENT_TYPES[normalizedType];\n  if (!equipmentType) {\n    console.warn(`⚠️ Неизвестный тип: \"${type}\"`);\n    return type;\n  }\n  return equipmentType.label;\n};\nexport const getEquipmentTypeIcon = type => {\n  var _EQUIPMENT_TYPES$norm;\n  if (!type) return '❓';\n  const mappedType = TYPE_MAP[type] || type;\n  const normalizedType = mappedType.toLowerCase().trim();\n  return ((_EQUIPMENT_TYPES$norm = EQUIPMENT_TYPES[normalizedType]) === null || _EQUIPMENT_TYPES$norm === void 0 ? void 0 : _EQUIPMENT_TYPES$norm.icon) || '❓';\n};\nexport const getEquipmentTypeOptions = () => {\n  return Object.values(EQUIPMENT_TYPES).map(t => ({\n    value: t.value,\n    label: t.label,\n    icon: t.icon\n  }));\n};","map":{"version":3,"names":["EQUIPMENT_TYPES","drill","value","label","dozer","shovel","grader","truck","loader","watertruck","auxequipment","TYPE_MAP","getEquipmentTypeText","type","mappedType","normalizedType","toLowerCase","trim","equipmentType","console","warn","getEquipmentTypeIcon","_EQUIPMENT_TYPES$norm","icon","getEquipmentTypeOptions","Object","values","map","t"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo_15_10/Tablo/frontend/src/components/EquipmentTypes.js"],"sourcesContent":["export const EQUIPMENT_TYPES = {\r\n    drill: { value: 'drill', label: 'Буровая установка' },\r\n    dozer: { value: 'dozer', label: 'Бульдозер' },\r\n    shovel: { value: 'shovel', label: 'Экскаватор' },\r\n    grader: { value: 'grader', label: 'Автогрейдер'},\r\n    truck: { value: 'truck', label: 'Самосвал' },\r\n    loader: { value: 'loader', label: 'Погрузчик' },\r\n    watertruck: { value: 'watertruck', label: 'Водовоз' },\r\n    auxequipment: { value: 'auxequipment', label: 'Вспомогательное оборудование' }\r\n};\r\n\r\nconst TYPE_MAP = {\r\n    'Drill': 'drill',\r\n    'Dozer': 'dozer',\r\n    'Shovel': 'shovel',\r\n    'Grader': 'grader',\r\n    'Truck': 'truck',\r\n    'Loader': 'loader',\r\n    'WaterTruck': 'watertruck',\r\n    'AuxEquipment': 'auxequipment'\r\n};\r\n\r\nexport const getEquipmentTypeText = (type) => {\r\n    if (!type) return 'Неизвестный тип';\r\n    const mappedType = TYPE_MAP[type] || type;\r\n    const normalizedType = mappedType.toLowerCase().trim();\r\n    const equipmentType = EQUIPMENT_TYPES[normalizedType];\r\n\r\n    if (!equipmentType) {\r\n        console.warn(`⚠️ Неизвестный тип: \"${type}\"`);\r\n        return type;\r\n    }\r\n\r\n    return equipmentType.label;\r\n};\r\n\r\nexport const getEquipmentTypeIcon = (type) => {\r\n    if (!type) return '❓';\r\n    const mappedType = TYPE_MAP[type] || type;\r\n    const normalizedType = mappedType.toLowerCase().trim();\r\n    return EQUIPMENT_TYPES[normalizedType]?.icon || '❓';\r\n};\r\n\r\nexport const getEquipmentTypeOptions = () => {\r\n    return Object.values(EQUIPMENT_TYPES).map(t => ({ value: t.value, label: t.label, icon: t.icon }));\r\n};"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG;EAC3BC,KAAK,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAoB,CAAC;EACrDC,KAAK,EAAE;IAAEF,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAY,CAAC;EAC7CE,MAAM,EAAE;IAAEH,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAa,CAAC;EAChDG,MAAM,EAAE;IAAEJ,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAa,CAAC;EAChDI,KAAK,EAAE;IAAEL,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAW,CAAC;EAC5CK,MAAM,EAAE;IAAEN,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAY,CAAC;EAC/CM,UAAU,EAAE;IAAEP,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAU,CAAC;EACrDO,YAAY,EAAE;IAAER,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAA+B;AACjF,CAAC;AAED,MAAMQ,QAAQ,GAAG;EACb,OAAO,EAAE,OAAO;EAChB,OAAO,EAAE,OAAO;EAChB,QAAQ,EAAE,QAAQ;EAClB,QAAQ,EAAE,QAAQ;EAClB,OAAO,EAAE,OAAO;EAChB,QAAQ,EAAE,QAAQ;EAClB,YAAY,EAAE,YAAY;EAC1B,cAAc,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;EAC1C,IAAI,CAACA,IAAI,EAAE,OAAO,iBAAiB;EACnC,MAAMC,UAAU,GAAGH,QAAQ,CAACE,IAAI,CAAC,IAAIA,IAAI;EACzC,MAAME,cAAc,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EACtD,MAAMC,aAAa,GAAGlB,eAAe,CAACe,cAAc,CAAC;EAErD,IAAI,CAACG,aAAa,EAAE;IAChBC,OAAO,CAACC,IAAI,CAAC,wBAAwBP,IAAI,GAAG,CAAC;IAC7C,OAAOA,IAAI;EACf;EAEA,OAAOK,aAAa,CAACf,KAAK;AAC9B,CAAC;AAED,OAAO,MAAMkB,oBAAoB,GAAIR,IAAI,IAAK;EAAA,IAAAS,qBAAA;EAC1C,IAAI,CAACT,IAAI,EAAE,OAAO,GAAG;EACrB,MAAMC,UAAU,GAAGH,QAAQ,CAACE,IAAI,CAAC,IAAIA,IAAI;EACzC,MAAME,cAAc,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EACtD,OAAO,EAAAK,qBAAA,GAAAtB,eAAe,CAACe,cAAc,CAAC,cAAAO,qBAAA,uBAA/BA,qBAAA,CAAiCC,IAAI,KAAI,GAAG;AACvD,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EACzC,OAAOC,MAAM,CAACC,MAAM,CAAC1B,eAAe,CAAC,CAAC2B,GAAG,CAACC,CAAC,KAAK;IAAE1B,KAAK,EAAE0B,CAAC,CAAC1B,KAAK;IAAEC,KAAK,EAAEyB,CAAC,CAACzB,KAAK;IAAEoB,IAAI,EAAEK,CAAC,CAACL;EAAK,CAAC,CAAC,CAAC;AACtG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}