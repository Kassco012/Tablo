{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kassymzhan.nuraliyev\\\\OneDrive - KAZ Minerals Management LLP\\\\Desktop\\\\Tablo\\\\Tablo\\\\frontend\\\\src\\\\contexts\\\\EquipmentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentContext = /*#__PURE__*/createContext();\nexport const useEquipment = () => {\n  _s();\n  const context = useContext(EquipmentContext);\n  if (!context) {\n    throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\n  }\n  return context;\n};\n_s(useEquipment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EquipmentProvider = ({\n  children\n}) => {\n  _s2();\n  const [equipment, setEquipment] = useState([]);\n  const [stats, setStats] = useState({\n    in_repair: 0,\n    ready: 0,\n    waiting: 0,\n    scheduled: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchEquipment = useCallback(async () => {\n    try {\n      console.log('🔄 Загрузка оборудования...');\n      setError(null);\n      const response = await api.get('/equipment');\n\n      // Проверяем что данные приходят в правильном формате\n      let equipmentData = response.data;\n      console.log('📦 Получены данные оборудования:', equipmentData);\n\n      // Если данные не массив, пытаемся извлечь массив\n      if (!Array.isArray(equipmentData)) {\n        if (equipmentData && Array.isArray(equipmentData.equipment)) {\n          equipmentData = equipmentData.equipment;\n        } else if (equipmentData && Array.isArray(equipmentData.data)) {\n          equipmentData = equipmentData.data;\n        } else {\n          console.error('❌ Данные оборудования не являются массивом:', equipmentData);\n          equipmentData = [];\n        }\n      }\n      setEquipment(equipmentData);\n      console.log('✅ Оборудование обновлено, количество:', equipmentData.length);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ Ошибка загрузки оборудования:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка загрузки оборудования');\n      // Устанавливаем пустой массив при ошибке\n      setEquipment([]);\n    }\n  }, []);\n  const fetchStats = useCallback(async () => {\n    try {\n      console.log('📊 Загрузка статистики...');\n      const response = await api.get('/equipment/stats');\n      setStats(response.data);\n      console.log('✅ Статистика обновлена:', response.data);\n    } catch (error) {\n      console.error('❌ Ошибка загрузки статистики:', error);\n      // Если статистика не загрузилась, вычисляем её локально\n      const localStats = {\n        in_repair: 0,\n        ready: 0,\n        waiting: 0,\n        scheduled: 0,\n        total: Array.isArray(equipment) ? equipment.length : 0\n      };\n      if (Array.isArray(equipment)) {\n        equipment.forEach(item => {\n          if (localStats[item.status] !== undefined) {\n            localStats[item.status]++;\n          }\n        });\n      }\n      setStats(localStats);\n      console.log('📊 Статистика вычислена локально:', localStats);\n    }\n  }, [equipment]);\n  const refreshData = useCallback(async () => {\n    console.log('🔄 Обновление данных...');\n    setLoading(true);\n    try {\n      await fetchEquipment();\n      // Статистика будет обновлена автоматически через useEffect\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchEquipment]);\n  useEffect(() => {\n    console.log('📊 Инициализация EquipmentProvider');\n    refreshData();\n  }, []);\n  useEffect(() => {\n    // Пересчитываем статистику при изменении оборудования\n    if (Array.isArray(equipment) && equipment.length > 0) {\n      fetchStats();\n    }\n  }, [equipment, fetchStats]);\n  const updateEquipment = async (id, updateData) => {\n    try {\n      const response = await api.put(`/equipment/${id}`, updateData);\n\n      // Обновляем локальное состояние\n      setEquipment(prev => {\n        if (!Array.isArray(prev)) return [];\n        return prev.map(item => item.id === id ? {\n          ...item,\n          ...response.data.equipment\n        } : item);\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Ошибка обновления оборудования'\n      };\n    }\n  };\n  const createEquipment = async equipmentData => {\n    try {\n      const response = await api.post('/equipment', equipmentData);\n      await refreshData(); // Перезагружаем данные\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Ошибка создания оборудования'\n      };\n    }\n  };\n  const deleteEquipment = async id => {\n    try {\n      await api.delete(`/equipment/${id}`);\n      setEquipment(prev => {\n        if (!Array.isArray(prev)) return [];\n        return prev.filter(item => item.id !== id);\n      });\n      return {\n        message: 'Оборудование удалено успешно'\n      };\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Ошибка удаления оборудования'\n      };\n    }\n  };\n  const getEquipmentById = id => {\n    return Array.isArray(equipment) ? equipment.find(item => item.id === id) : null;\n  };\n  const getEquipmentByStatus = status => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.status === status) : [];\n  };\n  const getEquipmentByType = type => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.type === type) : [];\n  };\n  const getEquipmentByPriority = priority => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.priority === priority) : [];\n  };\n  const getCriticalEquipment = () => {\n    if (!Array.isArray(equipment)) return [];\n    return equipment.filter(item => item.priority === 'critical' || item.status === 'waiting' && item.delay_hours > 4);\n  };\n  const value = {\n    equipment: Array.isArray(equipment) ? equipment : [],\n    stats,\n    loading,\n    error,\n    refreshData,\n    updateEquipment,\n    createEquipment,\n    deleteEquipment,\n    getEquipmentById,\n    getEquipmentByStatus,\n    getEquipmentByType,\n    getEquipmentByPriority,\n    getCriticalEquipment\n  };\n  return /*#__PURE__*/_jsxDEV(EquipmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n_s2(EquipmentProvider, \"2uX6pxp9wnOV86AcLGjl3TF+PhU=\");\n_c = EquipmentProvider;\nvar _c;\n$RefreshReg$(_c, \"EquipmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","jsxDEV","_jsxDEV","EquipmentContext","useEquipment","_s","context","Error","EquipmentProvider","children","_s2","equipment","setEquipment","stats","setStats","in_repair","ready","waiting","scheduled","total","loading","setLoading","error","setError","fetchEquipment","console","log","response","get","equipmentData","data","Array","isArray","length","_error$response","_error$response$data","message","fetchStats","localStats","forEach","item","status","undefined","refreshData","updateEquipment","id","updateData","put","prev","map","_error$response2","createEquipment","post","_error$response3","deleteEquipment","delete","filter","_error$response4","getEquipmentById","find","getEquipmentByStatus","getEquipmentByType","type","getEquipmentByPriority","priority","getCriticalEquipment","delay_hours","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo/Tablo/frontend/src/contexts/EquipmentContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst EquipmentContext = createContext();\r\n\r\nexport const useEquipment = () => {\r\n    const context = useContext(EquipmentContext);\r\n    if (!context) {\r\n        throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const EquipmentProvider = ({ children }) => {\r\n    const [equipment, setEquipment] = useState([]);\r\n    const [stats, setStats] = useState({\r\n        in_repair: 0,\r\n        ready: 0,\r\n        waiting: 0,\r\n        scheduled: 0,\r\n        total: 0\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchEquipment = useCallback(async () => {\r\n        try {\r\n            console.log('🔄 Загрузка оборудования...');\r\n            setError(null);\r\n            const response = await api.get('/equipment');\r\n\r\n            // Проверяем что данные приходят в правильном формате\r\n            let equipmentData = response.data;\r\n            console.log('📦 Получены данные оборудования:', equipmentData);\r\n\r\n            // Если данные не массив, пытаемся извлечь массив\r\n            if (!Array.isArray(equipmentData)) {\r\n                if (equipmentData && Array.isArray(equipmentData.equipment)) {\r\n                    equipmentData = equipmentData.equipment;\r\n                } else if (equipmentData && Array.isArray(equipmentData.data)) {\r\n                    equipmentData = equipmentData.data;\r\n                } else {\r\n                    console.error('❌ Данные оборудования не являются массивом:', equipmentData);\r\n                    equipmentData = [];\r\n                }\r\n            }\r\n\r\n            setEquipment(equipmentData);\r\n            console.log('✅ Оборудование обновлено, количество:', equipmentData.length);\r\n\r\n        } catch (error) {\r\n            console.error('❌ Ошибка загрузки оборудования:', error);\r\n            setError(error.response?.data?.message || 'Ошибка загрузки оборудования');\r\n            // Устанавливаем пустой массив при ошибке\r\n            setEquipment([]);\r\n        }\r\n    }, []);\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        try {\r\n            console.log('📊 Загрузка статистики...');\r\n            const response = await api.get('/equipment/stats');\r\n            setStats(response.data);\r\n            console.log('✅ Статистика обновлена:', response.data);\r\n        } catch (error) {\r\n            console.error('❌ Ошибка загрузки статистики:', error);\r\n            // Если статистика не загрузилась, вычисляем её локально\r\n            const localStats = {\r\n                in_repair: 0,\r\n                ready: 0,\r\n                waiting: 0,\r\n                scheduled: 0,\r\n                total: Array.isArray(equipment) ? equipment.length : 0\r\n            };\r\n\r\n            if (Array.isArray(equipment)) {\r\n                equipment.forEach(item => {\r\n                    if (localStats[item.status] !== undefined) {\r\n                        localStats[item.status]++;\r\n                    }\r\n                });\r\n            }\r\n\r\n            setStats(localStats);\r\n            console.log('📊 Статистика вычислена локально:', localStats);\r\n        }\r\n    }, [equipment]);\r\n\r\n    const refreshData = useCallback(async () => {\r\n        console.log('🔄 Обновление данных...');\r\n        setLoading(true);\r\n        try {\r\n            await fetchEquipment();\r\n            // Статистика будет обновлена автоматически через useEffect\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [fetchEquipment]);\r\n\r\n    useEffect(() => {\r\n        console.log('📊 Инициализация EquipmentProvider');\r\n        refreshData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Пересчитываем статистику при изменении оборудования\r\n        if (Array.isArray(equipment) && equipment.length > 0) {\r\n            fetchStats();\r\n        }\r\n    }, [equipment, fetchStats]);\r\n\r\n    const updateEquipment = async (id, updateData) => {\r\n        try {\r\n            const response = await api.put(`/equipment/${id}`, updateData);\r\n\r\n            // Обновляем локальное состояние\r\n            setEquipment(prev => {\r\n                if (!Array.isArray(prev)) return [];\r\n                return prev.map(item =>\r\n                    item.id === id ? { ...item, ...response.data.equipment } : item\r\n                );\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка обновления оборудования' };\r\n        }\r\n    };\r\n\r\n    const createEquipment = async (equipmentData) => {\r\n        try {\r\n            const response = await api.post('/equipment', equipmentData);\r\n            await refreshData(); // Перезагружаем данные\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка создания оборудования' };\r\n        }\r\n    };\r\n\r\n    const deleteEquipment = async (id) => {\r\n        try {\r\n            await api.delete(`/equipment/${id}`);\r\n            setEquipment(prev => {\r\n                if (!Array.isArray(prev)) return [];\r\n                return prev.filter(item => item.id !== id);\r\n            });\r\n            return { message: 'Оборудование удалено успешно' };\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка удаления оборудования' };\r\n        }\r\n    };\r\n\r\n    const getEquipmentById = (id) => {\r\n        return Array.isArray(equipment) ? equipment.find(item => item.id === id) : null;\r\n    };\r\n\r\n    const getEquipmentByStatus = (status) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.status === status) : [];\r\n    };\r\n\r\n    const getEquipmentByType = (type) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.type === type) : [];\r\n    };\r\n\r\n    const getEquipmentByPriority = (priority) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.priority === priority) : [];\r\n    };\r\n\r\n    const getCriticalEquipment = () => {\r\n        if (!Array.isArray(equipment)) return [];\r\n        return equipment.filter(item =>\r\n            item.priority === 'critical' ||\r\n            (item.status === 'waiting' && item.delay_hours > 4)\r\n        );\r\n    };\r\n\r\n    const value = {\r\n        equipment: Array.isArray(equipment) ? equipment : [],\r\n        stats,\r\n        loading,\r\n        error,\r\n        refreshData,\r\n        updateEquipment,\r\n        createEquipment,\r\n        deleteEquipment,\r\n        getEquipmentById,\r\n        getEquipmentByStatus,\r\n        getEquipmentByType,\r\n        getEquipmentByPriority,\r\n        getCriticalEquipment\r\n    };\r\n\r\n    return (\r\n        <EquipmentContext.Provider value={value}>\r\n            {children}\r\n        </EquipmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}