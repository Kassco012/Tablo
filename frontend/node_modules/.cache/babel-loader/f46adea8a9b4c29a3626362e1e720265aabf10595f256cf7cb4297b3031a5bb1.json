{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kassymzhan.nuraliyev\\\\OneDrive - KAZ Minerals Management LLP\\\\Desktop\\\\MMA_03_09\\\\MMA\\\\frontend\\\\src\\\\contexts\\\\EquipmentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentContext = /*#__PURE__*/createContext();\nexport const useEquipment = () => {\n  _s();\n  const context = useContext(EquipmentContext);\n  if (!context) {\n    throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\n  }\n  return context;\n};\n_s(useEquipment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EquipmentProvider = ({\n  children\n}) => {\n  _s2();\n  const [equipment, setEquipment] = useState([]);\n  const [stats, setStats] = useState({\n    in_repair: 0,\n    ready: 0,\n    waiting: 0,\n    scheduled: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchEquipment = useCallback(async () => {\n    try {\n      setError(null);\n      const response = await api.get('/equipment');\n      setEquipment(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error fetching equipment:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка загрузки оборудования');\n    }\n  }, []);\n  const fetchStats = useCallback(async () => {\n    try {\n      const response = await api.get('/equipment/stats');\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      // Если статистика не загрузилась, вычисляем её локально\n      const localStats = {\n        in_repair: 0,\n        ready: 0,\n        waiting: 0,\n        scheduled: 0,\n        total: equipment.length\n      };\n      equipment.forEach(item => {\n        if (localStats[item.status] !== undefined) {\n          localStats[item.status]++;\n        }\n      });\n      setStats(localStats);\n    }\n  }, [equipment]);\n  const refreshData = useCallback(async () => {\n    setLoading(true);\n    try {\n      await Promise.all([fetchEquipment(), fetchStats()]);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchEquipment, fetchStats]);\n  useEffect(() => {\n    refreshData();\n  }, []);\n  useEffect(() => {\n    // Пересчитываем статистику при изменении оборудования\n    if (equipment.length > 0) {\n      fetchStats();\n    }\n  }, [equipment, fetchStats]);\n  const updateEquipment = async (id, updateData) => {\n    try {\n      const response = await api.put(`/equipment/${id}`, updateData);\n\n      // Обновляем локальное состояние\n      setEquipment(prev => prev.map(item => item.id === id ? {\n        ...item,\n        ...response.data.equipment\n      } : item));\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Ошибка обновления оборудования'\n      };\n    }\n  };\n  const createEquipment = async equipmentData => {\n    try {\n      const response = await api.post('/equipment', equipmentData);\n      await refreshData(); // Перезагружаем данные\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Ошибка создания оборудования'\n      };\n    }\n  };\n  const deleteEquipment = async id => {\n    try {\n      await api.delete(`/equipment/${id}`);\n      setEquipment(prev => prev.filter(item => item.id !== id));\n      return {\n        message: 'Оборудование удалено успешно'\n      };\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Ошибка удаления оборудования'\n      };\n    }\n  };\n  const getEquipmentById = id => {\n    return equipment.find(item => item.id === id);\n  };\n  const getEquipmentByStatus = status => {\n    return equipment.filter(item => item.status === status);\n  };\n  const getEquipmentByType = type => {\n    return equipment.filter(item => item.type === type);\n  };\n  const getEquipmentByPriority = priority => {\n    return equipment.filter(item => item.priority === priority);\n  };\n  const getCriticalEquipment = () => {\n    return equipment.filter(item => item.priority === 'critical' || item.status === 'waiting' && item.delay_hours > 4);\n  };\n  const value = {\n    equipment,\n    stats,\n    loading,\n    error,\n    refreshData,\n    updateEquipment,\n    createEquipment,\n    deleteEquipment,\n    getEquipmentById,\n    getEquipmentByStatus,\n    getEquipmentByType,\n    getEquipmentByPriority,\n    getCriticalEquipment\n  };\n  return /*#__PURE__*/_jsxDEV(EquipmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s2(EquipmentProvider, \"2uX6pxp9wnOV86AcLGjl3TF+PhU=\");\n_c = EquipmentProvider;\nvar _c;\n$RefreshReg$(_c, \"EquipmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","jsxDEV","_jsxDEV","EquipmentContext","useEquipment","_s","context","Error","EquipmentProvider","children","_s2","equipment","setEquipment","stats","setStats","in_repair","ready","waiting","scheduled","total","loading","setLoading","error","setError","fetchEquipment","response","get","data","_error$response","_error$response$data","console","message","fetchStats","localStats","length","forEach","item","status","undefined","refreshData","Promise","all","updateEquipment","id","updateData","put","prev","map","_error$response2","createEquipment","equipmentData","post","_error$response3","deleteEquipment","delete","filter","_error$response4","getEquipmentById","find","getEquipmentByStatus","getEquipmentByType","type","getEquipmentByPriority","priority","getCriticalEquipment","delay_hours","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/MMA_03_09/MMA/frontend/src/contexts/EquipmentContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst EquipmentContext = createContext();\r\n\r\nexport const useEquipment = () => {\r\n    const context = useContext(EquipmentContext);\r\n    if (!context) {\r\n        throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const EquipmentProvider = ({ children }) => {\r\n    const [equipment, setEquipment] = useState([]);\r\n    const [stats, setStats] = useState({\r\n        in_repair: 0,\r\n        ready: 0,\r\n        waiting: 0,\r\n        scheduled: 0,\r\n        total: 0\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchEquipment = useCallback(async () => {\r\n        try {\r\n            setError(null);\r\n            const response = await api.get('/equipment');\r\n            setEquipment(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching equipment:', error);\r\n            setError(error.response?.data?.message || 'Ошибка загрузки оборудования');\r\n        }\r\n    }, []);\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        try {\r\n            const response = await api.get('/equipment/stats');\r\n            setStats(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching stats:', error);\r\n            // Если статистика не загрузилась, вычисляем её локально\r\n            const localStats = {\r\n                in_repair: 0,\r\n                ready: 0,\r\n                waiting: 0,\r\n                scheduled: 0,\r\n                total: equipment.length\r\n            };\r\n\r\n            equipment.forEach(item => {\r\n                if (localStats[item.status] !== undefined) {\r\n                    localStats[item.status]++;\r\n                }\r\n            });\r\n\r\n            setStats(localStats);\r\n        }\r\n    }, [equipment]);\r\n\r\n    const refreshData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            await Promise.all([\r\n                fetchEquipment(),\r\n                fetchStats()\r\n            ]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [fetchEquipment, fetchStats]);\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Пересчитываем статистику при изменении оборудования\r\n        if (equipment.length > 0) {\r\n            fetchStats();\r\n        }\r\n    }, [equipment, fetchStats]);\r\n\r\n    const updateEquipment = async (id, updateData) => {\r\n        try {\r\n            const response = await api.put(`/equipment/${id}`, updateData);\r\n\r\n            // Обновляем локальное состояние\r\n            setEquipment(prev =>\r\n                prev.map(item =>\r\n                    item.id === id ? { ...item, ...response.data.equipment } : item\r\n                )\r\n            );\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка обновления оборудования' };\r\n        }\r\n    };\r\n\r\n    const createEquipment = async (equipmentData) => {\r\n        try {\r\n            const response = await api.post('/equipment', equipmentData);\r\n            await refreshData(); // Перезагружаем данные\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка создания оборудования' };\r\n        }\r\n    };\r\n\r\n    const deleteEquipment = async (id) => {\r\n        try {\r\n            await api.delete(`/equipment/${id}`);\r\n            setEquipment(prev => prev.filter(item => item.id !== id));\r\n            return { message: 'Оборудование удалено успешно' };\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка удаления оборудования' };\r\n        }\r\n    };\r\n\r\n    const getEquipmentById = (id) => {\r\n        return equipment.find(item => item.id === id);\r\n    };\r\n\r\n    const getEquipmentByStatus = (status) => {\r\n        return equipment.filter(item => item.status === status);\r\n    };\r\n\r\n    const getEquipmentByType = (type) => {\r\n        return equipment.filter(item => item.type === type);\r\n    };\r\n\r\n    const getEquipmentByPriority = (priority) => {\r\n        return equipment.filter(item => item.priority === priority);\r\n    };\r\n\r\n    const getCriticalEquipment = () => {\r\n        return equipment.filter(item =>\r\n            item.priority === 'critical' ||\r\n            (item.status === 'waiting' && item.delay_hours > 4)\r\n        );\r\n    };\r\n\r\n    const value = {\r\n        equipment,\r\n        stats,\r\n        loading,\r\n        error,\r\n        refreshData,\r\n        updateEquipment,\r\n        createEquipment,\r\n        deleteEquipment,\r\n        getEquipmentById,\r\n        getEquipmentByStatus,\r\n        getEquipmentByType,\r\n        getEquipmentByPriority,\r\n        getCriticalEquipment\r\n    };\r\n\r\n    return (\r\n        <EquipmentContext.Provider value={value}>\r\n            {children}\r\n        </EquipmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}