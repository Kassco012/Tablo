{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kassymzhan.nuraliyev\\\\OneDrive - KAZ Minerals Management LLP\\\\Desktop\\\\Tablo_15_10\\\\Tablo\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport apiService, { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    console.log('🔐 Checking authentication...');\n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n        console.log('✅ User restored:', userData);\n      } else {\n        console.log('ℹ️ No saved authentication');\n        setUser(null);\n      }\n    } catch (err) {\n      console.error('❌ Auth check error:', err);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    // Изменил email -> username\n    console.log('Login attempt for:', username);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      console.log('✅ Login response:', response.data);\n\n      // Сохраняем токен и пользователя\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user);\n        setError(null);\n        console.log('✅ Token saved successfully'); // ✅ ИСПРАВЛЕНО: не логируем сам токен\n        return {\n          success: true\n        };\n      } else {\n        throw new Error('Токен не получен от сервера');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('❌ Login error:', err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Ошибка входа';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    console.log('👋 Logout');\n    setUser(null);\n    setError(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const hasRole = requiredRoles => {\n    if (!user) return false;\n    if (!Array.isArray(requiredRoles)) {\n      requiredRoles = [requiredRoles];\n    }\n    return requiredRoles.includes(user.role);\n  };\n  const isAuthenticated = () => {\n    return !!user && !!localStorage.getItem('token');\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    checkAuth,\n    hasRole,\n    isAuthenticated: isAuthenticated(),\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","apiService","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkAuth","console","log","token","localStorage","getItem","savedUser","userData","JSON","parse","err","login","username","password","response","post","data","setItem","stringify","success","_err$response","_err$response$data","errorMessage","message","logout","removeItem","hasRole","requiredRoles","Array","isArray","includes","role","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo_15_10/Tablo/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport apiService, { api } from '../services/api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const checkAuth = async () => {\r\n        console.log('🔐 Checking authentication...');\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const savedUser = localStorage.getItem('user');\r\n\r\n            if (token && savedUser) {\r\n                const userData = JSON.parse(savedUser);\r\n                setUser(userData);\r\n                console.log('✅ User restored:', userData);\r\n            } else {\r\n                console.log('ℹ️ No saved authentication');\r\n                setUser(null);\r\n            }\r\n        } catch (err) {\r\n            console.error('❌ Auth check error:', err);\r\n            setUser(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const login = async (username, password) => {  // Изменил email -> username\r\n        console.log('Login attempt for:', username);\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await api.post('/auth/login', { username, password });\r\n\r\n            console.log('✅ Login response:', response.data);\r\n\r\n            // Сохраняем токен и пользователя\r\n            if (response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('user', JSON.stringify(response.data.user));\r\n                setUser(response.data.user);\r\n                setError(null);\r\n                console.log('✅ Token saved successfully'); // ✅ ИСПРАВЛЕНО: не логируем сам токен\r\n                return { success: true };\r\n            } else {\r\n                throw new Error('Токен не получен от сервера');\r\n            }\r\n        } catch (err) {\r\n            console.error('❌ Login error:', err);\r\n            const errorMessage = err.response?.data?.message || err.message || 'Ошибка входа';\r\n            setError(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('👋 Logout');\r\n        setUser(null);\r\n        setError(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    const hasRole = (requiredRoles) => {\r\n        if (!user) return false;\r\n        if (!Array.isArray(requiredRoles)) {\r\n            requiredRoles = [requiredRoles];\r\n        }\r\n        return requiredRoles.includes(user.role);\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        return !!user && !!localStorage.getItem('token');\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        checkAuth,\r\n        hasRole,\r\n        isAuthenticated: isAuthenticated(),\r\n        setError\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}