{"ast":null,"code":"export const EQUIPMENT_TYPES = {\n  drill: {\n    value: 'drill',\n    label: 'Буровая установка'\n  },\n  dozer: {\n    value: 'dozer',\n    label: 'Бульдозер'\n  },\n  shovel: {\n    value: 'shovel',\n    label: 'Экскаватор'\n  },\n  grader: {\n    value: 'grader',\n    label: 'Автогрейдер'\n  },\n  truck: {\n    value: 'truck',\n    label: 'Самосвал'\n  },\n  loader: {\n    value: 'loader',\n    label: 'Погрузчик'\n  },\n  watertruck: {\n    value: 'watertruck',\n    label: 'Водовоз'\n  },\n  auxequipment: {\n    value: 'auxequipment',\n    label: 'Вспомогательное оборудование'\n  }\n};\n\n// ✅ РАСШИРЕННЫЙ маппинг: английские коды → внутренние коды\nconst TYPE_MAP = {\n  // Английские коды из MSSQL\n  'Drill': 'drill',\n  'Dozer': 'dozer',\n  'Shovel': 'shovel',\n  'Grader': 'grader',\n  'Truck': 'truck',\n  'Loader': 'loader',\n  'WaterTruck': 'watertruck',\n  'AuxEquipment': 'auxequipment',\n  'AuxE': 'auxequipment',\n  // ✅ НОВОЕ: Русские названия из БД → внутренние коды\n  'Буровая установка': 'drill',\n  'Буровой станок': 'drill',\n  'Бульдозер': 'dozer',\n  'Экскаватор': 'shovel',\n  'Автогрейдер': 'grader',\n  'Грейдер': 'grader',\n  'Самосвал': 'truck',\n  'Погрузчик': 'loader',\n  'Водовоз': 'watertruck',\n  'Поливочная машина': 'watertruck',\n  'Вспомогательное оборудование': 'auxequipment',\n  'Техника': 'auxequipment',\n  // ✅ НОВОЕ: Обработка \"Неизвестный тип\"\n  'Неизвестный тип': null,\n  'неизвестный тип': null,\n  'Unknown': null,\n  'unknown': null\n};\n\n// ✅ УЛУЧШЕННАЯ функция получения текста типа\nexport const getEquipmentTypeText = type => {\n  // Если тип пустой или null\n  if (!type) return '❓ Тип не указан';\n\n  // Нормализуем: убираем пробелы и приводим к нижнему регистру\n  const normalizedType = type.toString().trim();\n\n  // Проверяем маппинг (с учетом регистра)\n  const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\n\n  // Если нашли маппинг\n  if (mappedType) {\n    const equipmentType = EQUIPMENT_TYPES[mappedType];\n    return equipmentType ? equipmentType.label : '❓ Тип не указан';\n  }\n\n  // Если маппинг вернул null (Неизвестный тип)\n  if (mappedType === null) {\n    return '❓ Тип не указан';\n  }\n\n  // Пробуем найти напрямую в EQUIPMENT_TYPES\n  const directMatch = EQUIPMENT_TYPES[normalizedType.toLowerCase()];\n  if (directMatch) {\n    return directMatch.label;\n  }\n\n  // Если ничего не нашли - показываем как есть, но с предупреждением\n  console.warn(`⚠️ Неизвестный тип техники: \"${type}\"`);\n  return `❓ ${type}`;\n};\n\n// ✅ Получение иконки (опционально)\nexport const getEquipmentTypeIcon = type => {\n  if (!type) return '';\n  const normalizedType = type.toString().trim();\n  const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\n  const icons = {\n    'drill': '⚙️',\n    'dozer': '🚜',\n    'shovel': '🏗️',\n    'grader': '🛤️',\n    'truck': '🚛',\n    'loader': '🏋️',\n    'watertruck': '💧',\n    'auxequipment': '📦'\n  };\n  return icons[mappedType] || '❓';\n};\n\n// ✅ Получение опций для селектов\nexport const getEquipmentTypeOptions = () => {\n  return Object.values(EQUIPMENT_TYPES).map(t => ({\n    value: t.value,\n    label: t.label,\n    icon: getEquipmentTypeIcon(t.value)\n  }));\n};\n\n// ✅ НОВАЯ функция: Получить внутренний код по любому входному значению\nexport const normalizeEquipmentType = type => {\n  if (!type) return null;\n  const normalizedType = type.toString().trim();\n  const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\n  return mappedType || normalizedType.toLowerCase();\n};","map":{"version":3,"names":["EQUIPMENT_TYPES","drill","value","label","dozer","shovel","grader","truck","loader","watertruck","auxequipment","TYPE_MAP","getEquipmentTypeText","type","normalizedType","toString","trim","mappedType","toLowerCase","equipmentType","directMatch","console","warn","getEquipmentTypeIcon","icons","getEquipmentTypeOptions","Object","values","map","t","icon","normalizeEquipmentType"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo_15_10/Tablo/frontend/src/components/EquipmentTypes.js"],"sourcesContent":["export const EQUIPMENT_TYPES = {\r\n    drill: { value: 'drill', label: 'Буровая установка' },\r\n    dozer: { value: 'dozer', label: 'Бульдозер' },\r\n    shovel: { value: 'shovel', label: 'Экскаватор' },\r\n    grader: { value: 'grader', label: 'Автогрейдер' },\r\n    truck: { value: 'truck', label: 'Самосвал' },\r\n    loader: { value: 'loader', label: 'Погрузчик' },\r\n    watertruck: { value: 'watertruck', label: 'Водовоз' },\r\n    auxequipment: { value: 'auxequipment', label: 'Вспомогательное оборудование' }\r\n};\r\n\r\n// ✅ РАСШИРЕННЫЙ маппинг: английские коды → внутренние коды\r\nconst TYPE_MAP = {\r\n    // Английские коды из MSSQL\r\n    'Drill': 'drill',\r\n    'Dozer': 'dozer',\r\n    'Shovel': 'shovel',\r\n    'Grader': 'grader',\r\n    'Truck': 'truck',\r\n    'Loader': 'loader',\r\n    'WaterTruck': 'watertruck',\r\n    'AuxEquipment': 'auxequipment',\r\n    'AuxE': 'auxequipment',\r\n\r\n    // ✅ НОВОЕ: Русские названия из БД → внутренние коды\r\n    'Буровая установка': 'drill',\r\n    'Буровой станок': 'drill',\r\n    'Бульдозер': 'dozer',\r\n    'Экскаватор': 'shovel',\r\n    'Автогрейдер': 'grader',\r\n    'Грейдер': 'grader',\r\n    'Самосвал': 'truck',\r\n    'Погрузчик': 'loader',\r\n    'Водовоз': 'watertruck',\r\n    'Поливочная машина': 'watertruck',\r\n    'Вспомогательное оборудование': 'auxequipment',\r\n    'Техника': 'auxequipment',\r\n\r\n    // ✅ НОВОЕ: Обработка \"Неизвестный тип\"\r\n    'Неизвестный тип': null,\r\n    'неизвестный тип': null,\r\n    'Unknown': null,\r\n    'unknown': null\r\n};\r\n\r\n// ✅ УЛУЧШЕННАЯ функция получения текста типа\r\nexport const getEquipmentTypeText = (type) => {\r\n    // Если тип пустой или null\r\n    if (!type) return '❓ Тип не указан';\r\n\r\n    // Нормализуем: убираем пробелы и приводим к нижнему регистру\r\n    const normalizedType = type.toString().trim();\r\n\r\n    // Проверяем маппинг (с учетом регистра)\r\n    const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\r\n\r\n    // Если нашли маппинг\r\n    if (mappedType) {\r\n        const equipmentType = EQUIPMENT_TYPES[mappedType];\r\n        return equipmentType ? equipmentType.label : '❓ Тип не указан';\r\n    }\r\n\r\n    // Если маппинг вернул null (Неизвестный тип)\r\n    if (mappedType === null) {\r\n        return '❓ Тип не указан';\r\n    }\r\n\r\n    // Пробуем найти напрямую в EQUIPMENT_TYPES\r\n    const directMatch = EQUIPMENT_TYPES[normalizedType.toLowerCase()];\r\n    if (directMatch) {\r\n        return directMatch.label;\r\n    }\r\n\r\n    // Если ничего не нашли - показываем как есть, но с предупреждением\r\n    console.warn(`⚠️ Неизвестный тип техники: \"${type}\"`);\r\n    return `❓ ${type}`;\r\n};\r\n\r\n// ✅ Получение иконки (опционально)\r\nexport const getEquipmentTypeIcon = (type) => {\r\n    if (!type) return '';\r\n\r\n    const normalizedType = type.toString().trim();\r\n    const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\r\n\r\n    const icons = {\r\n        'drill': '⚙️',\r\n        'dozer': '🚜',\r\n        'shovel': '🏗️',\r\n        'grader': '🛤️',\r\n        'truck': '🚛',\r\n        'loader': '🏋️',\r\n        'watertruck': '💧',\r\n        'auxequipment': '📦'\r\n    };\r\n\r\n    return icons[mappedType] || '❓';\r\n};\r\n\r\n// ✅ Получение опций для селектов\r\nexport const getEquipmentTypeOptions = () => {\r\n    return Object.values(EQUIPMENT_TYPES).map(t => ({\r\n        value: t.value,\r\n        label: t.label,\r\n        icon: getEquipmentTypeIcon(t.value)\r\n    }));\r\n};\r\n\r\n// ✅ НОВАЯ функция: Получить внутренний код по любому входному значению\r\nexport const normalizeEquipmentType = (type) => {\r\n    if (!type) return null;\r\n\r\n    const normalizedType = type.toString().trim();\r\n    const mappedType = TYPE_MAP[normalizedType] || TYPE_MAP[normalizedType.toLowerCase()];\r\n\r\n    return mappedType || normalizedType.toLowerCase();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}