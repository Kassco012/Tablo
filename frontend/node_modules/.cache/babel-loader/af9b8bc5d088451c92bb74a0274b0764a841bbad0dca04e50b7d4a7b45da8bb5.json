{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kassymzhan.nuraliyev\\\\OneDrive - KAZ Minerals Management LLP\\\\Desktop\\\\Tablo_15_10\\\\Tablo\\\\frontend\\\\src\\\\contexts\\\\EquipmentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentContext = /*#__PURE__*/createContext();\nexport const useEquipment = () => {\n  _s();\n  const context = useContext(EquipmentContext);\n  if (!context) {\n    throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\n  }\n  return context;\n};\n_s(useEquipment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EquipmentProvider = ({\n  children\n}) => {\n  _s2();\n  const [equipment, setEquipment] = useState([]);\n  const [stats, setStats] = useState({\n    down: 0,\n    ready: 0,\n    delay: 0,\n    standby: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchEquipment = useCallback(async () => {\n    try {\n      console.log('\\n' + '='.repeat(50));\n      console.log('НАЧАЛО ЗАГРУЗКИ ОБОРУДОВАНИЯ');\n      console.log('='.repeat(50));\n      setError(null);\n      console.log('Отправка запроса: GET /equipment');\n      const response = await api.get('/equipment');\n      console.log('Ответ получен:', {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n        dataType: typeof response.data,\n        dataIsArray: Array.isArray(response.data)\n      });\n      let equipmentData = response.data;\n\n      // Детальная проверка структуры\n      if (equipmentData === null || equipmentData === undefined) {\n        console.error('response.data пустой (null/undefined)!');\n        setEquipment([]);\n        return;\n      }\n      console.log('Анализ структуры данных:', {\n        type: typeof equipmentData,\n        isArray: Array.isArray(equipmentData),\n        keys: typeof equipmentData === 'object' ? Object.keys(equipmentData) : 'N/A',\n        length: Array.isArray(equipmentData) ? equipmentData.length : 'N/A'\n      });\n\n      // Если это уже массив\n      if (Array.isArray(equipmentData)) {\n        console.log(`Это массив! Длина: ${equipmentData.length}`);\n        if (equipmentData.length > 0) {\n          console.log('Пример первой записи:', JSON.stringify(equipmentData[0], null, 2));\n        }\n        setEquipment(equipmentData);\n        console.log('equipment state обновлен');\n        return;\n      }\n\n      // Если это объект с вложенным массивом\n      if (typeof equipmentData === 'object') {\n        console.log('Это объект, ищем массив внутри...');\n\n        // Проверяем различные возможные ключи\n        const possibleKeys = ['equipment', 'data', 'items', 'records', 'results'];\n        for (const key of possibleKeys) {\n          if (equipmentData[key] && Array.isArray(equipmentData[key])) {\n            console.log(`Найден массив в ключе \"${key}\": ${equipmentData[key].length} записей`);\n            setEquipment(equipmentData[key]);\n            return;\n          }\n        }\n        console.error('❌ Массив не найден ни в одном из ожидаемых ключей');\n        console.error('Доступные ключи:', Object.keys(equipmentData));\n        console.error('Структура:', JSON.stringify(equipmentData, null, 2).substring(0, 500));\n      }\n\n      // Если ничего не подошло\n      console.error('❌ НЕИЗВЕСТНЫЙ ФОРМАТ ДАННЫХ');\n      console.error('Full response.data:', JSON.stringify(equipmentData, null, 2).substring(0, 1000));\n      setEquipment([]);\n      console.log('='.repeat(50));\n      console.log('❌ КОНЕЦ ЗАГРУЗКИ (ОШИБКА)');\n      console.log('='.repeat(50) + '\\n');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('\\n' + '='.repeat(50));\n      console.error('❌ КРИТИЧЕСКАЯ ОШИБКА ЗАГРУЗКИ');\n      console.error('='.repeat(50));\n      console.error('Error type:', error.name);\n      console.error('Error message:', error.message);\n      console.error('Error stack:', error.stack);\n      if (error.response) {\n        console.error('Response status:', error.response.status);\n        console.error('Response data:', error.response.data);\n        console.error('Response headers:', error.response.headers);\n      } else if (error.request) {\n        console.error('Request made but no response:', error.request);\n      }\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Ошибка загрузки оборудования');\n      setEquipment([]);\n      console.error('='.repeat(50) + '\\n');\n    }\n  }, []);\n  const fetchStats = useCallback(async () => {\n    try {\n      console.log('Загрузка статистики...');\n      const response = await api.get('/equipment/stats');\n      console.log('RAW stats:', response.data);\n\n      // Проверяем формат статистики\n      const statsData = response.data;\n\n      // Нормализуем ключи статистики\n      const normalizedStats = {\n        down: statsData.down || statsData.in_repair || 0,\n        ready: statsData.ready || 0,\n        delay: statsData.delay || statsData.waiting || 0,\n        standby: statsData.standby || statsData.scheduled || 0,\n        shiftchange: statsData.shiftchange || 0,\n        total: statsData.total || 0,\n        by_section: statsData.by_section || {}\n      };\n      console.log('Normalized stats:', normalizedStats);\n      setStats(normalizedStats);\n    } catch (error) {\n      console.error('Ошибка загрузки статистики:', error);\n\n      // Вычисляем локально если запрос провалился\n      if (Array.isArray(equipment) && equipment.length > 0) {\n        const localStats = {\n          down: 0,\n          ready: 0,\n          delay: 0,\n          standby: 0,\n          shiftchange: 0,\n          total: equipment.length,\n          by_section: {}\n        };\n        equipment.forEach(item => {\n          const status = (item.status || '').toLowerCase();\n          if (status === 'down' || status === 'in_repair') {\n            localStats.down++;\n          } else if (status === 'ready') {\n            localStats.ready++;\n          } else if (status === 'delay' || status === 'waiting') {\n            localStats.delay++;\n          } else if (status === 'standby' || status === 'scheduled') {\n            localStats.standby++;\n          } else if (status === 'shiftchange') {\n            localStats.shiftchange++;\n          }\n        });\n        console.log('Локально вычисленная статистика:', localStats);\n        setStats(localStats);\n      }\n    }\n  }, [equipment]);\n  const refreshData = useCallback(async () => {\n    console.log('Обновление данных...');\n    setLoading(true);\n    try {\n      await fetchEquipment();\n      // Статистика будет обновлена автоматически через useEffect\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchEquipment]);\n  useEffect(() => {\n    console.log('Инициализация EquipmentProvider');\n    refreshData();\n  }, []);\n  useEffect(() => {\n    // Пересчитываем статистику при изменении оборудования\n    if (Array.isArray(equipment) && equipment.length > 0) {\n      fetchStats();\n    }\n  }, [equipment, fetchStats]);\n  useEffect(() => {\n    console.log('СОСТОЯНИЕ EQUIPMENT CONTEXT:', {\n      equipment_count: Array.isArray(equipment) ? equipment.length : 'NOT ARRAY',\n      equipment_type: typeof equipment,\n      stats: stats,\n      loading: loading,\n      error: error,\n      sample: Array.isArray(equipment) && equipment.length > 0 ? equipment[0] : null\n    });\n  }, [equipment, stats, loading, error]);\n  const updateEquipment = async (id, updateData) => {\n    try {\n      const response = await api.put(`/equipment/${id}`, updateData);\n\n      // Обновляем локальное состояние\n      setEquipment(prev => {\n        if (!Array.isArray(prev)) return [];\n        return prev.map(item => item.id === id ? {\n          ...item,\n          ...response.data.equipment\n        } : item);\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Ошибка обновления оборудования'\n      };\n    }\n  };\n  const createEquipment = async equipmentData => {\n    try {\n      const response = await api.post('/equipment', equipmentData);\n      await refreshData(); // Перезагружаем данные\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Ошибка создания оборудования'\n      };\n    }\n  };\n  const deleteEquipment = async id => {\n    try {\n      await api.delete(`/equipment/${id}`);\n      setEquipment(prev => {\n        if (!Array.isArray(prev)) return [];\n        return prev.filter(item => item.id !== id);\n      });\n      return {\n        message: 'Оборудование удалено успешно'\n      };\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Ошибка удаления оборудования'\n      };\n    }\n  };\n  const getEquipmentById = id => {\n    return Array.isArray(equipment) ? equipment.find(item => item.id === id) : null;\n  };\n  const getEquipmentByStatus = status => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.status === status) : [];\n  };\n  const getEquipmentByType = type => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.type === type) : [];\n  };\n  const getEquipmentByPriority = priority => {\n    return Array.isArray(equipment) ? equipment.filter(item => item.priority === priority) : [];\n  };\n  const getCriticalEquipment = () => {\n    if (!Array.isArray(equipment)) return [];\n    return equipment.filter(item => item.priority === 'critical' || item.status === 'waiting' && item.delay_hours > 4);\n  };\n  const value = {\n    equipment: Array.isArray(equipment) ? equipment : [],\n    stats,\n    loading,\n    error,\n    refreshData,\n    updateEquipment,\n    createEquipment,\n    deleteEquipment,\n    getEquipmentById,\n    getEquipmentByStatus,\n    getEquipmentByType,\n    getEquipmentByPriority,\n    getCriticalEquipment\n  };\n  return /*#__PURE__*/_jsxDEV(EquipmentContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n};\n_s2(EquipmentProvider, \"coFFPZXvtXImug0OTKaeYob8Q2k=\");\n_c = EquipmentProvider;\nvar _c;\n$RefreshReg$(_c, \"EquipmentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","api","jsxDEV","_jsxDEV","EquipmentContext","useEquipment","_s","context","Error","EquipmentProvider","children","_s2","equipment","setEquipment","stats","setStats","down","ready","delay","standby","total","loading","setLoading","error","setError","fetchEquipment","console","log","repeat","response","get","status","statusText","headers","dataType","data","dataIsArray","Array","isArray","equipmentData","undefined","type","keys","Object","length","JSON","stringify","possibleKeys","key","substring","_error$response","_error$response$data","name","message","stack","request","fetchStats","statsData","normalizedStats","in_repair","waiting","scheduled","shiftchange","by_section","localStats","forEach","item","toLowerCase","refreshData","equipment_count","equipment_type","sample","updateEquipment","id","updateData","put","prev","map","_error$response2","createEquipment","post","_error$response3","deleteEquipment","delete","filter","_error$response4","getEquipmentById","find","getEquipmentByStatus","getEquipmentByType","getEquipmentByPriority","priority","getCriticalEquipment","delay_hours","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo_15_10/Tablo/frontend/src/contexts/EquipmentContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst EquipmentContext = createContext();\r\n\r\nexport const useEquipment = () => {\r\n    const context = useContext(EquipmentContext);\r\n    if (!context) {\r\n        throw new Error('useEquipment должен использоваться внутри EquipmentProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const EquipmentProvider = ({ children }) => {\r\n    const [equipment, setEquipment] = useState([]);\r\n    const [stats, setStats] = useState({\r\n        down: 0,\r\n        ready: 0,\r\n        delay: 0,\r\n        standby: 0,\r\n        total: 0\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchEquipment = useCallback(async () => {\r\n        try {\r\n            console.log('\\n' + '='.repeat(50));\r\n            console.log('НАЧАЛО ЗАГРУЗКИ ОБОРУДОВАНИЯ');\r\n            console.log('='.repeat(50));\r\n\r\n            setError(null);\r\n\r\n            console.log('Отправка запроса: GET /equipment');\r\n            const response = await api.get('/equipment');\r\n\r\n            console.log('Ответ получен:', {\r\n                status: response.status,\r\n                statusText: response.statusText,\r\n                headers: response.headers,\r\n                dataType: typeof response.data,\r\n                dataIsArray: Array.isArray(response.data)\r\n            });\r\n\r\n            let equipmentData = response.data;\r\n\r\n            // Детальная проверка структуры\r\n            if (equipmentData === null || equipmentData === undefined) {\r\n                console.error('response.data пустой (null/undefined)!');\r\n                setEquipment([]);\r\n                return;\r\n            }\r\n\r\n            console.log('Анализ структуры данных:', {\r\n                type: typeof equipmentData,\r\n                isArray: Array.isArray(equipmentData),\r\n                keys: typeof equipmentData === 'object' ? Object.keys(equipmentData) : 'N/A',\r\n                length: Array.isArray(equipmentData) ? equipmentData.length : 'N/A'\r\n            });\r\n\r\n            // Если это уже массив\r\n            if (Array.isArray(equipmentData)) {\r\n                console.log(`Это массив! Длина: ${equipmentData.length}`);\r\n\r\n                if (equipmentData.length > 0) {\r\n                    console.log('Пример первой записи:', JSON.stringify(equipmentData[0], null, 2));\r\n                }\r\n\r\n                setEquipment(equipmentData);\r\n                console.log('equipment state обновлен');\r\n                return;\r\n            }\r\n\r\n            // Если это объект с вложенным массивом\r\n            if (typeof equipmentData === 'object') {\r\n                console.log('Это объект, ищем массив внутри...');\r\n\r\n                // Проверяем различные возможные ключи\r\n                const possibleKeys = ['equipment', 'data', 'items', 'records', 'results'];\r\n\r\n                for (const key of possibleKeys) {\r\n                    if (equipmentData[key] && Array.isArray(equipmentData[key])) {\r\n                        console.log(`Найден массив в ключе \"${key}\": ${equipmentData[key].length} записей`);\r\n                        setEquipment(equipmentData[key]);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                console.error('❌ Массив не найден ни в одном из ожидаемых ключей');\r\n                console.error('Доступные ключи:', Object.keys(equipmentData));\r\n                console.error('Структура:', JSON.stringify(equipmentData, null, 2).substring(0, 500));\r\n            }\r\n\r\n            // Если ничего не подошло\r\n            console.error('❌ НЕИЗВЕСТНЫЙ ФОРМАТ ДАННЫХ');\r\n            console.error('Full response.data:', JSON.stringify(equipmentData, null, 2).substring(0, 1000));\r\n            setEquipment([]);\r\n\r\n            console.log('='.repeat(50));\r\n            console.log('❌ КОНЕЦ ЗАГРУЗКИ (ОШИБКА)');\r\n            console.log('='.repeat(50) + '\\n');\r\n\r\n        } catch (error) {\r\n            console.error('\\n' + '='.repeat(50));\r\n            console.error('❌ КРИТИЧЕСКАЯ ОШИБКА ЗАГРУЗКИ');\r\n            console.error('='.repeat(50));\r\n            console.error('Error type:', error.name);\r\n            console.error('Error message:', error.message);\r\n            console.error('Error stack:', error.stack);\r\n\r\n            if (error.response) {\r\n                console.error('Response status:', error.response.status);\r\n                console.error('Response data:', error.response.data);\r\n                console.error('Response headers:', error.response.headers);\r\n            } else if (error.request) {\r\n                console.error('Request made but no response:', error.request);\r\n            }\r\n\r\n            setError(error.response?.data?.message || error.message || 'Ошибка загрузки оборудования');\r\n            setEquipment([]);\r\n\r\n            console.error('='.repeat(50) + '\\n');\r\n        }\r\n    }, []); \r\n\r\n    const fetchStats = useCallback(async () => {\r\n        try {\r\n            console.log('Загрузка статистики...');\r\n            const response = await api.get('/equipment/stats');\r\n\r\n            console.log('RAW stats:', response.data);\r\n\r\n            // Проверяем формат статистики\r\n            const statsData = response.data;\r\n\r\n            // Нормализуем ключи статистики\r\n            const normalizedStats = {\r\n                down: statsData.down || statsData.in_repair || 0,\r\n                ready: statsData.ready || 0,\r\n                delay: statsData.delay || statsData.waiting || 0,\r\n                standby: statsData.standby || statsData.scheduled || 0,\r\n                shiftchange: statsData.shiftchange || 0,\r\n                total: statsData.total || 0,\r\n                by_section: statsData.by_section || {}\r\n            };\r\n\r\n            console.log('Normalized stats:', normalizedStats);\r\n            setStats(normalizedStats);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка загрузки статистики:', error);\r\n\r\n            // Вычисляем локально если запрос провалился\r\n            if (Array.isArray(equipment) && equipment.length > 0) {\r\n                const localStats = {\r\n                    down: 0,\r\n                    ready: 0,\r\n                    delay: 0,\r\n                    standby: 0,\r\n                    shiftchange: 0,\r\n                    total: equipment.length,\r\n                    by_section: {}\r\n                };\r\n\r\n                equipment.forEach(item => {\r\n                    const status = (item.status || '').toLowerCase();\r\n\r\n                    if (status === 'down' || status === 'in_repair') {\r\n                        localStats.down++;\r\n                    } else if (status === 'ready') {\r\n                        localStats.ready++;\r\n                    } else if (status === 'delay' || status === 'waiting') {\r\n                        localStats.delay++;\r\n                    } else if (status === 'standby' || status === 'scheduled') {\r\n                        localStats.standby++;\r\n                    } else if (status === 'shiftchange') {\r\n                        localStats.shiftchange++;\r\n                    }\r\n                });\r\n\r\n                console.log('Локально вычисленная статистика:', localStats);\r\n                setStats(localStats);\r\n            }\r\n        }\r\n    }, [equipment]);\r\n\r\n    const refreshData = useCallback(async () => {\r\n        console.log('Обновление данных...');\r\n        setLoading(true);\r\n        try {\r\n            await fetchEquipment();\r\n            // Статистика будет обновлена автоматически через useEffect\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [fetchEquipment]);\r\n\r\n    useEffect(() => {\r\n        console.log('Инициализация EquipmentProvider');\r\n        refreshData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Пересчитываем статистику при изменении оборудования\r\n        if (Array.isArray(equipment) && equipment.length > 0) {\r\n            fetchStats();\r\n        }\r\n    }, [equipment, fetchStats]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('СОСТОЯНИЕ EQUIPMENT CONTEXT:', {\r\n            equipment_count: Array.isArray(equipment) ? equipment.length : 'NOT ARRAY',\r\n            equipment_type: typeof equipment,\r\n            stats: stats,\r\n            loading: loading,\r\n            error: error,\r\n            sample: Array.isArray(equipment) && equipment.length > 0 ? equipment[0] : null\r\n        });\r\n    }, [equipment, stats, loading, error]);\r\n\r\n    const updateEquipment = async (id, updateData) => {\r\n        try {\r\n            const response = await api.put(`/equipment/${id}`, updateData);\r\n\r\n            // Обновляем локальное состояние\r\n            setEquipment(prev => {\r\n                if (!Array.isArray(prev)) return [];\r\n                return prev.map(item =>\r\n                    item.id === id ? { ...item, ...response.data.equipment } : item\r\n                );\r\n            });\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка обновления оборудования' };\r\n        }\r\n    };\r\n\r\n    const createEquipment = async (equipmentData) => {\r\n        try {\r\n            const response = await api.post('/equipment', equipmentData);\r\n            await refreshData(); // Перезагружаем данные\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка создания оборудования' };\r\n        }\r\n    };\r\n\r\n    const deleteEquipment = async (id) => {\r\n        try {\r\n            await api.delete(`/equipment/${id}`);\r\n            setEquipment(prev => {\r\n                if (!Array.isArray(prev)) return [];\r\n                return prev.filter(item => item.id !== id);\r\n            });\r\n            return { message: 'Оборудование удалено успешно' };\r\n        } catch (error) {\r\n            throw error.response?.data || { message: 'Ошибка удаления оборудования' };\r\n        }\r\n    };\r\n\r\n    const getEquipmentById = (id) => {\r\n        return Array.isArray(equipment) ? equipment.find(item => item.id === id) : null;\r\n    };\r\n\r\n    const getEquipmentByStatus = (status) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.status === status) : [];\r\n    };\r\n\r\n    const getEquipmentByType = (type) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.type === type) : [];\r\n    };\r\n\r\n    const getEquipmentByPriority = (priority) => {\r\n        return Array.isArray(equipment) ? equipment.filter(item => item.priority === priority) : [];\r\n    };\r\n\r\n    const getCriticalEquipment = () => {\r\n        if (!Array.isArray(equipment)) return [];\r\n        return equipment.filter(item =>\r\n            item.priority === 'critical' ||\r\n            (item.status === 'waiting' && item.delay_hours > 4)\r\n        );\r\n    };\r\n\r\n    const value = {\r\n        equipment: Array.isArray(equipment) ? equipment : [],\r\n        stats,\r\n        loading,\r\n        error,\r\n        refreshData,\r\n        updateEquipment,\r\n        createEquipment,\r\n        deleteEquipment,\r\n        getEquipmentById,\r\n        getEquipmentByStatus,\r\n        getEquipmentByType,\r\n        getEquipmentByPriority,\r\n        getCriticalEquipment\r\n    };\r\n\r\n    return (\r\n        <EquipmentContext.Provider value={value}>\r\n            {children}\r\n        </EquipmentContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}