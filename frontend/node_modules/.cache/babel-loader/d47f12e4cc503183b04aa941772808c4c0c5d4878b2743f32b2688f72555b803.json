{"ast":null,"code":"// frontend/src/constants/equipmentTypes.js\n\n/**\r\n * Конфигурация типов оборудования\r\n * Основано на реальных данных из базы All Equipment\r\n * Используется для единообразного отображения типов техники во всем приложении\r\n */\nexport const EQUIPMENT_TYPES = {\n  auxequipment: {\n    value: 'auxequipment',\n    label: 'Вспомогательное оборудование',\n    labelShort: 'Вспом. оборуд.',\n    color: '#6c757d',\n    description: 'Caterpillar CS-series и другое вспомогательное оборудование'\n  },\n  drill: {\n    value: 'drill',\n    label: 'Буровая установка',\n    labelShort: 'Буровая',\n    color: '#6f42c1',\n    description: 'Sandvik, Atlas Copco, Epiroc Pit Viper'\n  },\n  dozer: {\n    value: 'dozer',\n    label: 'Бульдозер',\n    labelShort: 'Бульдозер',\n    color: '#fd7e14',\n    description: 'Caterpillar D9R-D11T, Komatsu D375A, CAT 834K/844K'\n  },\n  shovel: {\n    value: 'shovel',\n    label: 'Экскаватор',\n    labelShort: 'Экскаватор',\n    color: '#ffc107',\n    description: 'Hitachi EX-series, Caterpillar, ZX-series'\n  },\n  grader: {\n    value: 'grader',\n    label: 'Автогрейдер',\n    labelShort: 'Грейдер',\n    color: '#20c997',\n    description: 'Caterpillar 16M, 24M'\n  },\n  truck: {\n    value: 'truck',\n    label: 'Самосвал',\n    labelShort: 'Самосвал',\n    color: '#dc3545',\n    description: 'Caterpillar 777D, 785C, 793D'\n  },\n  loader: {\n    value: 'loader',\n    label: 'Погрузчик',\n    labelShort: 'Погрузчик',\n    color: '#28a745',\n    description: 'Caterpillar 966L, 993K, 994K, Hitachi ZW330'\n  },\n  watertruck: {\n    value: 'watertruck',\n    label: 'Водовоз',\n    labelShort: 'Водовоз',\n    color: '#17a2b8',\n    description: 'Watertruck 777D'\n  },\n  // Для обратной совместимости со старым кодом\n  excavator: {\n    value: 'shovel',\n    label: 'Экскаватор',\n    labelShort: 'Экскаватор',\n    color: '#ffc107',\n    description: 'Алиас для Shovel'\n  }\n};\n\n/**\r\n * Получить отображаемое название типа оборудования\r\n * @param {string} type - Тип оборудования (drill, dozer, shovel, etc.)\r\n * @param {boolean} useShort - Использовать короткое название\r\n * @returns {string} - Отображаемое название на русском языке\r\n */\nexport const getEquipmentTypeText = (type, useShort = false) => {\n  if (!type) return 'Неизвестный тип';\n  const normalizedType = type.toLowerCase().trim();\n  const equipmentType = EQUIPMENT_TYPES[normalizedType];\n  if (!equipmentType) {\n    console.warn(`⚠️ Неизвестный тип техники: \"${type}\"`);\n    return type;\n  }\n  return useShort ? equipmentType.labelShort : equipmentType.label;\n};\n\n/**\r\n * Получить иконку типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - Эмодзи иконка\r\n */\nexport const getEquipmentTypeIcon = type => {\n  if (!type) return '❓';\n  const normalizedType = type.toLowerCase().trim();\n  const equipmentType = EQUIPMENT_TYPES[normalizedType];\n  return equipmentType ? equipmentType.icon : '❓';\n};\n\n/**\r\n * Получить цвет типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - HEX цвет\r\n */\nexport const getEquipmentTypeColor = type => {\n  if (!type) return '#6c757d';\n  const normalizedType = type.toLowerCase().trim();\n  const equipmentType = EQUIPMENT_TYPES[normalizedType];\n  return equipmentType ? equipmentType.color : '#6c757d';\n};\n\n/**\r\n * Получить массив всех типов для dropdown/select\r\n * @param {boolean} includeAliases - Включить алиасы (excavator)\r\n * @returns {Array} - Массив объектов {value, label}\r\n */\nexport const getEquipmentTypeOptions = (includeAliases = false) => {\n  const types = Object.values(EQUIPMENT_TYPES);\n\n  // Фильтруем алиасы если не нужны\n  const filtered = includeAliases ? types : types.filter(type => type.value !== 'shovel' || type.label !== 'Алиас для Shovel');\n  return filtered.filter(type => {\n    var _type$description;\n    return !((_type$description = type.description) !== null && _type$description !== void 0 && _type$description.includes('Алиас'));\n  }).map(type => ({\n    value: type.value,\n    label: type.label,\n    icon: type.icon\n  }));\n};\n\n/**\r\n * Проверить, существует ли тип оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {boolean}\r\n */\nexport const isValidEquipmentType = type => {\n  if (!type) return false;\n  const normalizedType = type.toLowerCase().trim();\n  return EQUIPMENT_TYPES.hasOwnProperty(normalizedType);\n};\n\n/**\r\n * Получить описание типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - Описание\r\n */\nexport const getEquipmentTypeDescription = type => {\n  if (!type) return '';\n  const normalizedType = type.toLowerCase().trim();\n  const equipmentType = EQUIPMENT_TYPES[normalizedType];\n  return equipmentType ? equipmentType.description : '';\n};\n\n/**\r\n * Получить статистику по типам (для отчетов)\r\n * @param {Array} equipmentList - Массив оборудования\r\n * @returns {Object} - Статистика {type: count}\r\n */\nexport const getEquipmentTypeStats = equipmentList => {\n  const stats = {};\n  equipmentList.forEach(item => {\n    var _item$type;\n    const type = (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.toLowerCase();\n    if (type && EQUIPMENT_TYPES[type]) {\n      const typeLabel = EQUIPMENT_TYPES[type].label;\n      stats[typeLabel] = (stats[typeLabel] || 0) + 1;\n    }\n  });\n  return stats;\n};\n\n/**\r\n * Группировать оборудование по типам\r\n * @param {Array} equipmentList - Массив оборудования\r\n * @returns {Object} - Сгруппированное оборудование {type: [items]}\r\n */\nexport const groupEquipmentByType = equipmentList => {\n  const grouped = {};\n  equipmentList.forEach(item => {\n    var _item$type2;\n    const type = (_item$type2 = item.type) === null || _item$type2 === void 0 ? void 0 : _item$type2.toLowerCase();\n    if (type && EQUIPMENT_TYPES[type]) {\n      const typeLabel = EQUIPMENT_TYPES[type].label;\n      if (!grouped[typeLabel]) {\n        grouped[typeLabel] = [];\n      }\n      grouped[typeLabel].push(item);\n    }\n  });\n  return grouped;\n};\n\n// Экспорт для использования в других модулях\nexport default EQUIPMENT_TYPES;","map":{"version":3,"names":["EQUIPMENT_TYPES","auxequipment","value","label","labelShort","color","description","drill","dozer","shovel","grader","truck","loader","watertruck","excavator","getEquipmentTypeText","type","useShort","normalizedType","toLowerCase","trim","equipmentType","console","warn","getEquipmentTypeIcon","icon","getEquipmentTypeColor","getEquipmentTypeOptions","includeAliases","types","Object","values","filtered","filter","_type$description","includes","map","isValidEquipmentType","hasOwnProperty","getEquipmentTypeDescription","getEquipmentTypeStats","equipmentList","stats","forEach","item","_item$type","typeLabel","groupEquipmentByType","grouped","_item$type2","push"],"sources":["C:/Users/kassymzhan.nuraliyev/OneDrive - KAZ Minerals Management LLP/Desktop/Tablo_15_10/Tablo/frontend/src/components/EquipmentTypes.js"],"sourcesContent":["// frontend/src/constants/equipmentTypes.js\r\n\r\n/**\r\n * Конфигурация типов оборудования\r\n * Основано на реальных данных из базы All Equipment\r\n * Используется для единообразного отображения типов техники во всем приложении\r\n */\r\nexport const EQUIPMENT_TYPES = {\r\n    auxequipment: {\r\n        value: 'auxequipment',\r\n        label: 'Вспомогательное оборудование',\r\n        labelShort: 'Вспом. оборуд.',\r\n        color: '#6c757d',\r\n        description: 'Caterpillar CS-series и другое вспомогательное оборудование'\r\n    },\r\n    drill: {\r\n        value: 'drill',\r\n        label: 'Буровая установка',\r\n        labelShort: 'Буровая',\r\n        color: '#6f42c1',\r\n        description: 'Sandvik, Atlas Copco, Epiroc Pit Viper'\r\n    },\r\n    dozer: {\r\n        value: 'dozer',\r\n        label: 'Бульдозер',\r\n        labelShort: 'Бульдозер',\r\n        color: '#fd7e14',\r\n        description: 'Caterpillar D9R-D11T, Komatsu D375A, CAT 834K/844K'\r\n    },\r\n    shovel: {\r\n        value: 'shovel',\r\n        label: 'Экскаватор',\r\n        labelShort: 'Экскаватор',\r\n        color: '#ffc107',\r\n        description: 'Hitachi EX-series, Caterpillar, ZX-series'\r\n    },\r\n    grader: {\r\n        value: 'grader',\r\n        label: 'Автогрейдер',\r\n        labelShort: 'Грейдер',\r\n        color: '#20c997',\r\n        description: 'Caterpillar 16M, 24M'\r\n    },\r\n    truck: {\r\n        value: 'truck',\r\n        label: 'Самосвал',\r\n        labelShort: 'Самосвал',\r\n        color: '#dc3545',\r\n        description: 'Caterpillar 777D, 785C, 793D'\r\n    },\r\n    loader: {\r\n        value: 'loader',\r\n        label: 'Погрузчик',\r\n        labelShort: 'Погрузчик',\r\n        color: '#28a745',\r\n        description: 'Caterpillar 966L, 993K, 994K, Hitachi ZW330'\r\n    },\r\n    watertruck: {\r\n        value: 'watertruck',\r\n        label: 'Водовоз',\r\n        labelShort: 'Водовоз',\r\n        color: '#17a2b8',\r\n        description: 'Watertruck 777D'\r\n    },\r\n\r\n    // Для обратной совместимости со старым кодом\r\n    excavator: {\r\n        value: 'shovel',\r\n        label: 'Экскаватор',\r\n        labelShort: 'Экскаватор',\r\n        color: '#ffc107',\r\n        description: 'Алиас для Shovel'\r\n    }\r\n};\r\n\r\n/**\r\n * Получить отображаемое название типа оборудования\r\n * @param {string} type - Тип оборудования (drill, dozer, shovel, etc.)\r\n * @param {boolean} useShort - Использовать короткое название\r\n * @returns {string} - Отображаемое название на русском языке\r\n */\r\nexport const getEquipmentTypeText = (type, useShort = false) => {\r\n    if (!type) return 'Неизвестный тип';\r\n\r\n    const normalizedType = type.toLowerCase().trim();\r\n    const equipmentType = EQUIPMENT_TYPES[normalizedType];\r\n\r\n    if (!equipmentType) {\r\n        console.warn(`⚠️ Неизвестный тип техники: \"${type}\"`);\r\n        return type;\r\n    }\r\n\r\n    return useShort ? equipmentType.labelShort : equipmentType.label;\r\n};\r\n\r\n/**\r\n * Получить иконку типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - Эмодзи иконка\r\n */\r\nexport const getEquipmentTypeIcon = (type) => {\r\n    if (!type) return '❓';\r\n\r\n    const normalizedType = type.toLowerCase().trim();\r\n    const equipmentType = EQUIPMENT_TYPES[normalizedType];\r\n    return equipmentType ? equipmentType.icon : '❓';\r\n};\r\n\r\n/**\r\n * Получить цвет типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - HEX цвет\r\n */\r\nexport const getEquipmentTypeColor = (type) => {\r\n    if (!type) return '#6c757d';\r\n\r\n    const normalizedType = type.toLowerCase().trim();\r\n    const equipmentType = EQUIPMENT_TYPES[normalizedType];\r\n    return equipmentType ? equipmentType.color : '#6c757d';\r\n};\r\n\r\n/**\r\n * Получить массив всех типов для dropdown/select\r\n * @param {boolean} includeAliases - Включить алиасы (excavator)\r\n * @returns {Array} - Массив объектов {value, label}\r\n */\r\nexport const getEquipmentTypeOptions = (includeAliases = false) => {\r\n    const types = Object.values(EQUIPMENT_TYPES);\r\n\r\n    // Фильтруем алиасы если не нужны\r\n    const filtered = includeAliases\r\n        ? types\r\n        : types.filter(type => type.value !== 'shovel' || type.label !== 'Алиас для Shovel');\r\n\r\n    return filtered\r\n        .filter(type => !type.description?.includes('Алиас'))\r\n        .map(type => ({\r\n            value: type.value,\r\n            label: type.label,\r\n            icon: type.icon\r\n        }));\r\n};\r\n\r\n/**\r\n * Проверить, существует ли тип оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {boolean}\r\n */\r\nexport const isValidEquipmentType = (type) => {\r\n    if (!type) return false;\r\n    const normalizedType = type.toLowerCase().trim();\r\n    return EQUIPMENT_TYPES.hasOwnProperty(normalizedType);\r\n};\r\n\r\n/**\r\n * Получить описание типа оборудования\r\n * @param {string} type - Тип оборудования\r\n * @returns {string} - Описание\r\n */\r\nexport const getEquipmentTypeDescription = (type) => {\r\n    if (!type) return '';\r\n\r\n    const normalizedType = type.toLowerCase().trim();\r\n    const equipmentType = EQUIPMENT_TYPES[normalizedType];\r\n    return equipmentType ? equipmentType.description : '';\r\n};\r\n\r\n/**\r\n * Получить статистику по типам (для отчетов)\r\n * @param {Array} equipmentList - Массив оборудования\r\n * @returns {Object} - Статистика {type: count}\r\n */\r\nexport const getEquipmentTypeStats = (equipmentList) => {\r\n    const stats = {};\r\n\r\n    equipmentList.forEach(item => {\r\n        const type = item.type?.toLowerCase();\r\n        if (type && EQUIPMENT_TYPES[type]) {\r\n            const typeLabel = EQUIPMENT_TYPES[type].label;\r\n            stats[typeLabel] = (stats[typeLabel] || 0) + 1;\r\n        }\r\n    });\r\n\r\n    return stats;\r\n};\r\n\r\n/**\r\n * Группировать оборудование по типам\r\n * @param {Array} equipmentList - Массив оборудования\r\n * @returns {Object} - Сгруппированное оборудование {type: [items]}\r\n */\r\nexport const groupEquipmentByType = (equipmentList) => {\r\n    const grouped = {};\r\n\r\n    equipmentList.forEach(item => {\r\n        const type = item.type?.toLowerCase();\r\n        if (type && EQUIPMENT_TYPES[type]) {\r\n            const typeLabel = EQUIPMENT_TYPES[type].label;\r\n            if (!grouped[typeLabel]) {\r\n                grouped[typeLabel] = [];\r\n            }\r\n            grouped[typeLabel].push(item);\r\n        }\r\n    });\r\n\r\n    return grouped;\r\n};\r\n\r\n// Экспорт для использования в других модулях\r\nexport default EQUIPMENT_TYPES;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,eAAe,GAAG;EAC3BC,YAAY,EAAE;IACVC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,8BAA8B;IACrCC,UAAU,EAAE,gBAAgB;IAC5BC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDC,KAAK,EAAE;IACHL,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,mBAAmB;IAC1BC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDE,KAAK,EAAE;IACHN,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,WAAW;IAClBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDG,MAAM,EAAE;IACJP,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,YAAY;IACnBC,UAAU,EAAE,YAAY;IACxBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDI,MAAM,EAAE;IACJR,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,aAAa;IACpBC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDK,KAAK,EAAE;IACHT,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,UAAU;IACtBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDM,MAAM,EAAE;IACJV,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,WAAW;IAClBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDO,UAAU,EAAE;IACRX,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC;EAED;EACAQ,SAAS,EAAE;IACPZ,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,YAAY;IACnBC,UAAU,EAAE,YAAY;IACxBC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,GAAG,KAAK,KAAK;EAC5D,IAAI,CAACD,IAAI,EAAE,OAAO,iBAAiB;EAEnC,MAAME,cAAc,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAChD,MAAMC,aAAa,GAAGrB,eAAe,CAACkB,cAAc,CAAC;EAErD,IAAI,CAACG,aAAa,EAAE;IAChBC,OAAO,CAACC,IAAI,CAAC,gCAAgCP,IAAI,GAAG,CAAC;IACrD,OAAOA,IAAI;EACf;EAEA,OAAOC,QAAQ,GAAGI,aAAa,CAACjB,UAAU,GAAGiB,aAAa,CAAClB,KAAK;AACpE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMqB,oBAAoB,GAAIR,IAAI,IAAK;EAC1C,IAAI,CAACA,IAAI,EAAE,OAAO,GAAG;EAErB,MAAME,cAAc,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAChD,MAAMC,aAAa,GAAGrB,eAAe,CAACkB,cAAc,CAAC;EACrD,OAAOG,aAAa,GAAGA,aAAa,CAACI,IAAI,GAAG,GAAG;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAIV,IAAI,IAAK;EAC3C,IAAI,CAACA,IAAI,EAAE,OAAO,SAAS;EAE3B,MAAME,cAAc,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAChD,MAAMC,aAAa,GAAGrB,eAAe,CAACkB,cAAc,CAAC;EACrD,OAAOG,aAAa,GAAGA,aAAa,CAAChB,KAAK,GAAG,SAAS;AAC1D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMsB,uBAAuB,GAAGA,CAACC,cAAc,GAAG,KAAK,KAAK;EAC/D,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC/B,eAAe,CAAC;;EAE5C;EACA,MAAMgC,QAAQ,GAAGJ,cAAc,GACzBC,KAAK,GACLA,KAAK,CAACI,MAAM,CAACjB,IAAI,IAAIA,IAAI,CAACd,KAAK,KAAK,QAAQ,IAAIc,IAAI,CAACb,KAAK,KAAK,kBAAkB,CAAC;EAExF,OAAO6B,QAAQ,CACVC,MAAM,CAACjB,IAAI;IAAA,IAAAkB,iBAAA;IAAA,OAAI,GAAAA,iBAAA,GAAClB,IAAI,CAACV,WAAW,cAAA4B,iBAAA,eAAhBA,iBAAA,CAAkBC,QAAQ,CAAC,OAAO,CAAC;EAAA,EAAC,CACpDC,GAAG,CAACpB,IAAI,KAAK;IACVd,KAAK,EAAEc,IAAI,CAACd,KAAK;IACjBC,KAAK,EAAEa,IAAI,CAACb,KAAK;IACjBsB,IAAI,EAAET,IAAI,CAACS;EACf,CAAC,CAAC,CAAC;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,oBAAoB,GAAIrB,IAAI,IAAK;EAC1C,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;EACvB,MAAME,cAAc,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAChD,OAAOpB,eAAe,CAACsC,cAAc,CAACpB,cAAc,CAAC;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMqB,2BAA2B,GAAIvB,IAAI,IAAK;EACjD,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;EAEpB,MAAME,cAAc,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAChD,MAAMC,aAAa,GAAGrB,eAAe,CAACkB,cAAc,CAAC;EACrD,OAAOG,aAAa,GAAGA,aAAa,CAACf,WAAW,GAAG,EAAE;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMkC,qBAAqB,GAAIC,aAAa,IAAK;EACpD,MAAMC,KAAK,GAAG,CAAC,CAAC;EAEhBD,aAAa,CAACE,OAAO,CAACC,IAAI,IAAI;IAAA,IAAAC,UAAA;IAC1B,MAAM7B,IAAI,IAAA6B,UAAA,GAAGD,IAAI,CAAC5B,IAAI,cAAA6B,UAAA,uBAATA,UAAA,CAAW1B,WAAW,CAAC,CAAC;IACrC,IAAIH,IAAI,IAAIhB,eAAe,CAACgB,IAAI,CAAC,EAAE;MAC/B,MAAM8B,SAAS,GAAG9C,eAAe,CAACgB,IAAI,CAAC,CAACb,KAAK;MAC7CuC,KAAK,CAACI,SAAS,CAAC,GAAG,CAACJ,KAAK,CAACI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IAClD;EACJ,CAAC,CAAC;EAEF,OAAOJ,KAAK;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,oBAAoB,GAAIN,aAAa,IAAK;EACnD,MAAMO,OAAO,GAAG,CAAC,CAAC;EAElBP,aAAa,CAACE,OAAO,CAACC,IAAI,IAAI;IAAA,IAAAK,WAAA;IAC1B,MAAMjC,IAAI,IAAAiC,WAAA,GAAGL,IAAI,CAAC5B,IAAI,cAAAiC,WAAA,uBAATA,WAAA,CAAW9B,WAAW,CAAC,CAAC;IACrC,IAAIH,IAAI,IAAIhB,eAAe,CAACgB,IAAI,CAAC,EAAE;MAC/B,MAAM8B,SAAS,GAAG9C,eAAe,CAACgB,IAAI,CAAC,CAACb,KAAK;MAC7C,IAAI,CAAC6C,OAAO,CAACF,SAAS,CAAC,EAAE;QACrBE,OAAO,CAACF,SAAS,CAAC,GAAG,EAAE;MAC3B;MACAE,OAAO,CAACF,SAAS,CAAC,CAACI,IAAI,CAACN,IAAI,CAAC;IACjC;EACJ,CAAC,CAAC;EAEF,OAAOI,OAAO;AAClB,CAAC;;AAED;AACA,eAAehD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}